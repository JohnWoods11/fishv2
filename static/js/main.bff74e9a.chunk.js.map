{"version":3,"sources":["catch.module.css","session.module.css","lakes.module.css","home.module.css","rankings.module.css","rank.module.css","statistics.module.css","Home.js","Lakes.js","Session.js","Catch.js","Rank.js","Rankings.js","Statistics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","useState","toSession","setToSession","to","className","styles","container","Button","button","size","variant","currentSession","onClick","Lakes","accordionContainer","Accordion","defaultActiveKey","lakes","map","lake","index","Card","Key","Toggle","as","Header","eventKey","lakeHeader","name","sz","event","stopPropagation","startSession","Collapse","Body","lakeBody","bodyButtons","editLake","deleteLake","length","addLake","backButton","Session","toHome","setToHome","toCatch","setToCatch","header","lakeIndex","castInfo","casting","cast","casts","currentCast","bites","castingOptions","DropdownButton","ButtonGroup","title","bait","baits","Dropdown","Item","changeBait","style","changeStyle","verticalButtons","catchButton","recordReelIn","horizontalButtons","otherButton","addBite","recordCatchFail","endCast","endSession","Catch","changeSpecies","newSpecies","newCatch","state","catch","species","setState","changeWeight","weight","target","value","addCatch","recordCatchSuccess","castTime","catchTime","this","thisCatch","reelInTime","DropdownItem","Form","Group","controlId","Label","kilosToPoundsReadable","Control","type","min","max","step","onChange","catchStats","statsPair","mSToDate","toLocaleDateString","toLocaleTimeString","recordButton","React","Component","Rank","totalPoints","points","reduce","a","b","averagePoints","rankings","rank","nameArray","toFixed","Rankings","lakeIndexFilter","setLakeFilter","baitFilter","setBaitFilter","styleFilter","setStyleFilter","rankingsContainer","baitUsage","styleUsage","catchSpecies","Statistics","resetStatsScreen","filteredCastList","generalStats","catchRate","timeCasted","catches","heaviestCatch","filteredCastTotal","isCastStats","isRankStats","showCastStats","newFilteredList","castHistory","push","mapStats","showRankings","newRankingsList","newFilter","newAllDaysOfYear","i","newDayArray","filteredBaitUsage","filteredStyleUsage","filteredSpeciesList","filteredCatches","filteredTimeCasted","filteredBites","filteredHeaviestCatch","castIndex","catchSuccess","date","dayOfLongYear","getDate","getMonth","hour","getHours","indexOf","duration","newCatchRate","newCastingDuration","newBites","newCatches","newHeaviestCatch","newFilteredCastToltal","newGeneralStats","dayArray","splice","daysOfYearArray","updateFilterList","newFilterList","newLakeFilter","newBaitFilter","newStyleFilter","filterContainer","console","log","generalStat","generalStatHeader","mSToReadable","categoryStats","timeGraphContainer","year","day","backgroundColor","width","height","hours","hourScale","graphContainer","graph","color","fontSize","textAlign","statsContainer","statsOptions","statSelectorButton","App","newLakeName","window","prompt","newLake","newLakes","localStorage","setItem","JSON","stringify","editedLake","confirm","newCurrentSession","castingDuration","newCastHistory","concat","Date","getTime","recordedSpecies","recordedWeight","thisCast","lakeName","milliseconds","setTime","seconds","secondsNoDecimal","minutes","weightOunces","remainOunces","path","exact","render","getItem","savedSession","parse","savedLakes","savedCastHistory","savedBaits","savedStyles","savedSpecies","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bff74e9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"catch_container__2PM1J\",\"species\":\"catch_species__1YkKM\",\"weight\":\"catch_weight__3W8MJ\",\"catchStats\":\"catch_catchStats__3b_MT\",\"statsPair\":\"catch_statsPair__P5rQi\",\"recordButton\":\"catch_recordButton__2lfeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"session_container__lCfA5\",\"header\":\"session_header__2r-16\",\"castInfo\":\"session_castInfo__1u3MJ\",\"castingOptions\":\"session_castingOptions__91fQk\",\"verticalButtons\":\"session_verticalButtons__Lw9As\",\"horizontalButtons\":\"session_horizontalButtons__yWM0a\",\"catchButton\":\"session_catchButton__kwDQb\",\"otherButton\":\"session_otherButton__39D0y\",\"backButton\":\"session_backButton__3lLW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakes_container__2X8aK\",\"accordionContainer\":\"lakes_accordionContainer__J0kBt\",\"lakeHeader\":\"lakes_lakeHeader__3Hrvc\",\"lakeBody\":\"lakes_lakeBody__1E5C8\",\"bodyButtons\":\"lakes_bodyButtons__312n9\",\"backButton\":\"lakes_backButton__3EpyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__BAwCE\",\"button\":\"home_button__hXUXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rankingsContainer\":\"rankings_rankingsContainer__1CFie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"rank_container__2xoXq\",\"rankings\":\"rank_rankings__3FdAY\",\"rank\":\"rank_rank__1qsk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"statistics_container__36Eba\",\"statsOptions\":\"statistics_statsOptions__1zjji\",\"statSelectorButton\":\"statistics_statSelectorButton__Xk6JP\",\"filterContainer\":\"statistics_filterContainer__OE6JI\",\"generalStats\":\"statistics_generalStats__2NTaS\",\"generalStat\":\"statistics_generalStat__3TYK1\",\"generalStatHeader\":\"statistics_generalStatHeader___6c5W\",\"categoryStats\":\"statistics_categoryStats__1viJP\",\"timeGraphContainer\":\"statistics_timeGraphContainer__3JM9y\",\"graphContainer\":\"statistics_graphContainer__3xyp2\",\"year\":\"statistics_year__3ubV0\",\"day\":\"statistics_day__1lVow\",\"hours\":\"statistics_hours__1G6W5\",\"hour\":\"statistics_hour__3Hta-\",\"hourScale\":\"statistics_hourScale__16AzH\",\"backButton\":\"statistics_backButton__1RHNT\",\"graph\":\"statistics_graph__29KLk\"};","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./home.module.css\";\r\n\r\nfunction Home(props) {\r\n  const [toSession, setToSession] = useState(false);\r\n\r\n  const toCurrentSession = () => {\r\n    if (props.currentSession) {\r\n      setToSession(true);\r\n    }\r\n  };\r\n\r\n  if (toSession) {\r\n    return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Link to=\"/fishv2/lakes\">\r\n        <Button className={styles.button} size=\"lg\">\r\n          Lakes\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/fishv2/stats\">\r\n        <Button className={styles.button} size=\"lg\">\r\n          Statistics\r\n        </Button>\r\n      </Link>\r\n\r\n      <Button\r\n        className={styles.button}\r\n        size=\"lg\"\r\n        variant={props.currentSession ? \"primary\" : \"secondary\"}\r\n        onClick={toCurrentSession}\r\n      >\r\n        Session\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport styles from \"./lakes.module.css\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nfunction Lakes(props) {\r\n  const [toSession, setToSession] = useState(false);\r\n\r\n  const addLake = (event) => {\r\n    props.addLake();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const editLake = (event, index) => {\r\n    props.editLake(index);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const deleteLake = (index) => {\r\n    props.deleteLake(index);\r\n  };\r\n\r\n  const startSession = (event, index) => {\r\n    if (!props.currentSession) {\r\n      props.startSession(index);\r\n      setToSession(true);\r\n    } else {\r\n      event.stopPropagation();\r\n    }\r\n    //implement end current session\r\n  };\r\n\r\n  if (toSession) {\r\n    return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.accordionContainer}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {props.lakes.map((lake, index) => (\r\n            <Card Key={index}>\r\n              <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n                <div className={styles.lakeHeader}>\r\n                  {lake.name}\r\n                  <div>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      sz=\"lg\"\r\n                      onClick={(event) => {\r\n                        startSession(event, index);\r\n                      }}\r\n                    >\r\n                      Fish\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={index}>\r\n                <Card.Body>\r\n                  <div className={styles.lakeBody}>\r\n                    Stats here some time\r\n                    <div className={styles.bodyButtons}>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        sz=\"lg\"\r\n                        onClick={(event) => editLake(event, index)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => deleteLake(index)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          ))}\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={props.lakes.length}>\r\n              <div className={styles.lakeHeader}>\r\n                Add a lake\r\n                <div>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    sz=\"lg\"\r\n                    onClick={(event) => addLake(event)}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Accordion.Toggle>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n      <Link to=\"/fishv2/\">\r\n        <Button className={styles.backButton} variant=\"primary\">\r\n          Back\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lakes;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./session.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\n\r\nfunction Session(props) {\r\n  const [toHome, setToHome] = useState(false);\r\n  const [toCatch, setToCatch] = useState(false);\r\n\r\n  const endSession = () => {\r\n    setToHome(true);\r\n    props.endSession();\r\n  };\r\n\r\n  const cast = () => {\r\n    props.cast();\r\n  };\r\n\r\n  const endCast = () => {\r\n    props.recordReelIn();\r\n    props.recordCatchFail();\r\n    props.endCast();\r\n  };\r\n\r\n  const addBite = () => {\r\n    if (props.currentSession.casting) {\r\n      props.addBite();\r\n    }\r\n  };\r\n\r\n  const changeBait = (bait) => {\r\n    props.changeBait(bait);\r\n  };\r\n\r\n  const changeStyle = (style) => {\r\n    props.changeStyle(style);\r\n  };\r\n\r\n  const recordCatchDetails = () => {\r\n    if (props.currentSession.casting) {\r\n      props.recordReelIn();\r\n      setToCatch(true);\r\n    }\r\n  };\r\n\r\n  if (toHome) {\r\n    return <Redirect to=\"/fishv2/\"></Redirect>;\r\n  }\r\n  if (toCatch) {\r\n    return <Redirect to=\"/fishv2/catch\"></Redirect>;\r\n  }\r\n\r\n  return props.currentSession ? (\r\n    <div className={styles.container}>\r\n      <div>\r\n        <div className={styles.header}>\r\n          {props.lakes[props.currentSession.lakeIndex].name}{\" \"}\r\n        </div>\r\n        <div\r\n          className={styles.castInfo}\r\n          onClick={props.currentSession.casting === false ? cast : null}\r\n        >\r\n          {props.currentSession.casting === true ? (\r\n            <div>\r\n              {props.currentSession.casts}{\" \"}\r\n              {props.currentSession.currentCast.bites}\r\n            </div>\r\n          ) : (\r\n            \"CAST\"\r\n          )}\r\n        </div>{\" \"}\r\n        <div className={styles.castingOptions}>\r\n          <DropdownButton\r\n            as={ButtonGroup}\r\n            variant=\"info\"\r\n            title={\r\n              props.currentSession.bait ? props.currentSession.bait : \"NO BAIT\"\r\n            }\r\n          >\r\n            {props.baits.map((bait, index) => (\r\n              <Dropdown.Item\r\n                eventKey={index}\r\n                onClick={() => {\r\n                  changeBait(bait);\r\n                }}\r\n              >\r\n                {bait}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </DropdownButton>\r\n\r\n          <DropdownButton\r\n            as={ButtonGroup}\r\n            variant=\"info\"\r\n            title={\r\n              props.currentSession.style\r\n                ? props.currentSession.style\r\n                : \"NO STYLE\"\r\n            }\r\n          >\r\n            {props.styles.map((style, index) => (\r\n              <Dropdown.Item\r\n                eventKey={index}\r\n                onClick={() => {\r\n                  changeStyle(style);\r\n                }}\r\n              >\r\n                {style}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </DropdownButton>\r\n        </div>\r\n        <div className={styles.verticalButtons}>\r\n          <Button\r\n            className={styles.catchButton}\r\n            variant=\"success\"\r\n            size=\"lg\"\r\n            onClick={recordCatchDetails}\r\n          >\r\n            FISH LANDED\r\n          </Button>{\" \"}\r\n          <div className={styles.horizontalButtons}>\r\n            <Button\r\n              className={styles.otherButton}\r\n              variant=\"primary\"\r\n              onClick={addBite}\r\n            >\r\n              BITE OR RUN\r\n            </Button>{\" \"}\r\n            <Button\r\n              className={styles.otherButton}\r\n              variant={props.currentSession.casting ? \"info\" : \"danger\"}\r\n              onClick={props.currentSession.casting ? endCast : endSession}\r\n            >\r\n              {props.currentSession.casting ? \"END CAST\" : \"END SESSION\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/fishv2/\">\r\n        <Button className={styles.backButton}>Back</Button>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\"></Redirect>\r\n  );\r\n}\r\n\r\nexport default Session;\r\n","import React from \"react\";\r\nimport styles from \"./catch.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Catch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      catch: {\r\n        lakeIndex: null,\r\n        castTime: null,\r\n        catchTime: null,\r\n        species: null,\r\n        weight: null,\r\n        bait: null,\r\n        style: null,\r\n      },\r\n      toSession: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.currentSession) {\r\n      let thisCatch = this.state.catch;\r\n      thisCatch.lakeIndex = this.props.currentSession.lakeIndex;\r\n      thisCatch.castTime = this.props.currentSession.currentCast.castTime;\r\n      thisCatch.catchTime = this.props.currentSession.currentCast.reelInTime;\r\n      thisCatch.bait = this.props.currentSession.bait;\r\n      thisCatch.style = this.props.currentSession.style;\r\n      this.setState({ catch: thisCatch });\r\n    }\r\n  }\r\n\r\n  changeSpecies = (newSpecies) => {\r\n    let newCatch = this.state.catch;\r\n    newCatch.species = newSpecies;\r\n    this.setState({ catch: newCatch });\r\n  };\r\n\r\n  changeWeight = (event) => {\r\n    let newCatch = this.state.catch;\r\n    newCatch.weight = event.target.value;\r\n    this.setState({ catch: newCatch });\r\n  };\r\n\r\n  addCatch = () => {\r\n    this.props.recordCatchSuccess(\r\n      this.state.catch.species,\r\n      this.state.catch.weight\r\n    );\r\n    this.props.endCast();\r\n    this.setState({ toSession: true });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.currentSession) {\r\n      return <Redirect to=\"/fishv2/\"></Redirect>;\r\n    }\r\n\r\n    if (this.state.toSession) {\r\n      return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <DropdownButton\r\n          size=\"lg\"\r\n          className={styles.species}\r\n          as={ButtonGroup}\r\n          variant=\"primary\"\r\n          title={\r\n            this.state.catch.species ? this.state.catch.species : \"NO SPECIES\"\r\n          }\r\n        >\r\n          {this.props.species.map((species, index) => (\r\n            <DropdownItem\r\n              eventKey={index}\r\n              onClick={() => {\r\n                this.changeSpecies(species);\r\n              }}\r\n            >\r\n              {species}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownButton>\r\n\r\n        <Form className={styles.weight}>\r\n          <Form.Group controlId=\"weightRange\">\r\n            <Form.Label>\r\n              {this.state.catch.weight\r\n                ? this.props.kilosToPoundsReadable(this.state.catch.weight)\r\n                : \"NO WEIGHT RECORDED\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"20\"\r\n              step=\"0.028349\"\r\n              onChange={this.changeWeight}\r\n              value={this.state.catch.weight}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <div className={styles.catchStats}>\r\n          <div className={styles.statsPair}>\r\n            <div>\r\n              {this.state.catch.lakeIndex !== null\r\n                ? this.props.lakes[this.state.catch.lakeIndex].name\r\n                : \"NA\"}\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              {this.props\r\n                .mSToDate(this.state.catch.catchTime)\r\n                .toLocaleDateString()}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Cast time:{\" \"}\r\n            <div>\r\n              {this.props\r\n                .mSToDate(this.state.catch.castTime)\r\n                .toLocaleTimeString()}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Catch Time:{\" \"}\r\n            <div>\r\n              {this.props\r\n                .mSToDate(this.state.catch.catchTime)\r\n                .toLocaleTimeString()}{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Species:{\" \"}\r\n            <div>\r\n              {this.state.catch.species ? this.state.catch.species : \"NA\"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Weight:{\" \"}\r\n            <div>\r\n              {this.state.catch.weight ? this.state.catch.weight : \"NA\"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Bait:{\" \"}\r\n            <div>{this.state.catch.bait ? this.state.catch.bait : \"NA\"}</div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Style:{\" \"}\r\n            <div>{this.state.catch.style ? this.state.catch.style : \"NA\"}</div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant=\"success\"\r\n          size=\"lg\"\r\n          className={styles.recordButton}\r\n          onClick={this.addCatch}\r\n        >\r\n          ADD CATCH\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Catch;\r\n","import React from \"react\";\r\nimport styles from \"./rank.module.css\";\r\n\r\nfunction Rank(props) {\r\n  let totalPoints = props.points.reduce((a, b) => a + b, 0);\r\n  let averagePoints = totalPoints / props.points.length;\r\n  return (\r\n    <div className={styles.rankings}>\r\n      <h4>{props.type}</h4>\r\n      {props.points.map((points, index) => (\r\n        <div className={styles.rank}>\r\n          {props.nameArray[index] ? props.nameArray[index] : \"Not recorded\"} :{\" \"}\r\n          {((points / totalPoints) * 100).toFixed(1) -\r\n            ((averagePoints / totalPoints) * 100).toFixed(1) >\r\n          0\r\n            ? `+${(\r\n                ((points / totalPoints) * 100).toFixed(1) -\r\n                ((averagePoints / totalPoints) * 100).toFixed(1)\r\n              ).toFixed(1)}`\r\n            : (\r\n                ((points / totalPoints) * 100).toFixed(1) -\r\n                ((averagePoints / totalPoints) * 100).toFixed(1)\r\n              ).toFixed(1)}\r\n          %\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport styles from \"./rankings.module.css\";\r\nimport { Dropdown, DropdownButton, ButtonGroup } from \"react-bootstrap\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Rank from \"./Rank\";\r\n\r\nfunction Rankings(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        variant=\"info\"\r\n        title={\r\n          props.lakeIndexFilter !== null\r\n            ? props.lakes[props.lakeIndexFilter].name\r\n            : \"All lakes\"\r\n        }\r\n      >\r\n        <Dropdown.Item\r\n          eventKey={0}\r\n          onClick={() => {\r\n            props.setLakeFilter(null);\r\n          }}\r\n        >\r\n          All lakes\r\n        </Dropdown.Item>\r\n        {props.lakes.map((lake, index) => (\r\n          <Dropdown.Item\r\n            eventKey={index + 1}\r\n            onClick={() => {\r\n              props.setLakeFilter(index);\r\n            }}\r\n          >\r\n            {lake.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        variant=\"info\"\r\n        title={props.baitFilter !== null ? props.baitFilter : \"All baits\"}\r\n      >\r\n        <Dropdown.Item\r\n          eventKey={0}\r\n          onClick={() => {\r\n            props.setBaitFilter(null);\r\n          }}\r\n        >\r\n          All baits\r\n        </Dropdown.Item>\r\n        {props.baits.map((bait, index) => (\r\n          <Dropdown.Item\r\n            eventKey={index + 1}\r\n            onClick={() => {\r\n              props.setBaitFilter(bait);\r\n            }}\r\n          >\r\n            {bait}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        variant=\"info\"\r\n        title={props.styleFilter !== null ? props.styleFilter : \"All styles\"}\r\n      >\r\n        <Dropdown.Item\r\n          eventKey={0}\r\n          onClick={() => {\r\n            props.setStyleFilter(null);\r\n          }}\r\n        >\r\n          All styles\r\n        </Dropdown.Item>\r\n        {props.styles.map((style, index) => (\r\n          <Dropdown.Item\r\n            eventKey={index + 1}\r\n            onClick={() => {\r\n              props.setStyleFilter(style);\r\n            }}\r\n          >\r\n            {style}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      <div className={styles.rankingsContainer}>\r\n        <Rank\r\n          points={props.baitUsage}\r\n          type=\"Bait\"\r\n          nameArray={props.baits}\r\n        ></Rank>\r\n        <Rank\r\n          points={props.styleUsage}\r\n          type=\"Style\"\r\n          nameArray={props.styles}\r\n        ></Rank>\r\n        <Rank\r\n          points={props.catchSpecies}\r\n          type=\"Species\"\r\n          nameArray={props.species}\r\n        ></Rank>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rankings;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./statistics.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rankings from \"./Rankings\";\r\n\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      styleUsage: [],\r\n      baitUsage: [],\r\n      catchSpecies: [],\r\n      daysOfYearArray: [],\r\n      dayArray: [],\r\n      filteredCastList: [],\r\n      generalStats: {\r\n        catchRate: null,\r\n        timeCasted: null,\r\n        bites: null,\r\n        catches: null,\r\n        heaviestCatch: null,\r\n      },\r\n      isCastStats: false,\r\n      isRankStats: false,\r\n      lakeIndexFilter: null,\r\n      baitFilter: null,\r\n      styleFilter: null,\r\n    };\r\n  }\r\n\r\n  resetStatsScreen = () => {\r\n    this.setState({\r\n      filteredCastList: [],\r\n      generalStats: {\r\n        catchRate: null,\r\n        timeCasted: null,\r\n        bites: null,\r\n        catches: null,\r\n        heaviestCatch: null,\r\n        filteredCastTotal: null,\r\n      },\r\n      isCastStats: false,\r\n      isRankStats: false,\r\n      lakeIndexFilter: null,\r\n      baitFilter: null,\r\n      styleFilter: null,\r\n    });\r\n  };\r\n\r\n  showCastStats = () => {\r\n    let newFilteredList = [];\r\n    let castStats = [...this.props.castHistory];\r\n    castStats.map((cast, index) => {\r\n      newFilteredList.push(index);\r\n    });\r\n    this.mapStats(newFilteredList);\r\n    this.setState({ isCastStats: true });\r\n  };\r\n\r\n  showRankings = () => {\r\n    let newRankingsList = [];\r\n    let castDataIndexes = [...this.props.castHistory];\r\n    castDataIndexes.map((cast, index) => {\r\n      newRankingsList.push(index);\r\n    });\r\n    this.mapStats(newRankingsList);\r\n    this.setState({ isRankStats: true });\r\n  };\r\n\r\n  mapStats = (filteredCastList) => {\r\n    let newFilter = filteredCastList;\r\n    let newAllDaysOfYear = [];\r\n    for (let i = 0; i < 372; i++) {\r\n      newAllDaysOfYear.push(0);\r\n    }\r\n    let newDayArray = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      newDayArray.push(0);\r\n    }\r\n    let filteredBaitUsage = [];\r\n    for (let i = 0; i < this.props.baits.length + 1; i++) {\r\n      //+1 on array to store null baits\r\n      filteredBaitUsage.push(0);\r\n    }\r\n    let filteredStyleUsage = [];\r\n    for (let i = 0; i < this.props.styles.length + 1; i++) {\r\n      //+1 on array to store null baits\r\n      filteredStyleUsage.push(0);\r\n    }\r\n    let filteredSpeciesList = [];\r\n    for (let i = 0; i < this.props.species.length + 1; i++) {\r\n      //+1 on array to store null baits\r\n      filteredSpeciesList.push(0);\r\n    }\r\n    let filteredCatches = 0;\r\n    let filteredTimeCasted = 0;\r\n    let filteredBites = 0;\r\n    let filteredHeaviestCatch = 0;\r\n    newFilter.map((castIndex) => {\r\n      if (this.props.castHistory[castIndex].catchSuccess === true) {\r\n        filteredCatches++;\r\n        let date = this.props.mSToDate(\r\n          this.props.castHistory[castIndex].reelInTime\r\n        );\r\n        let dayOfLongYear = date.getDate() + date.getMonth() * 31;\r\n        newAllDaysOfYear[dayOfLongYear] += 1;\r\n        let hour = date.getHours();\r\n        newDayArray[hour] += 1;\r\n        this.props.castHistory[castIndex].species === null\r\n          ? (filteredSpeciesList[this.props.species.length] += 1)\r\n          : (filteredSpeciesList[\r\n              this.props.species.indexOf(\r\n                this.props.castHistory[castIndex].species\r\n              )\r\n            ] += 1);\r\n        if (this.props.castHistory[castIndex].weight > filteredHeaviestCatch) {\r\n          filteredHeaviestCatch = this.props.castHistory[castIndex].weight;\r\n        }\r\n      }\r\n\r\n      filteredTimeCasted += this.props.castHistory[castIndex].duration;\r\n      filteredBites += this.props.castHistory[castIndex].bites;\r\n\r\n      this.props.castHistory[castIndex].bait === null\r\n        ? (filteredBaitUsage[this.props.baits.length] += 1)\r\n        : (filteredBaitUsage[\r\n            this.props.baits.indexOf(this.props.castHistory[castIndex].bait)\r\n          ] += 1);\r\n      this.props.castHistory[castIndex].style === null\r\n        ? (filteredStyleUsage[this.props.styles.length] += 1)\r\n        : (filteredStyleUsage[\r\n            this.props.styles.indexOf(this.props.castHistory[castIndex].style)\r\n          ] += 1);\r\n    });\r\n\r\n    let newCatchRate = filteredCatches / filteredCastList.length;\r\n    let newCastingDuration = filteredTimeCasted;\r\n    let newBites = filteredBites;\r\n    let newCatches = filteredCatches;\r\n    let newHeaviestCatch = filteredHeaviestCatch;\r\n    let newFilteredCastToltal = filteredCastList.length;\r\n\r\n    let newGeneralStats = {\r\n      catchRate: newCatchRate,\r\n      dayArray: newDayArray,\r\n      timeCasted: newCastingDuration,\r\n      bites: newBites,\r\n      catches: newCatches,\r\n      heaviestCatch: newHeaviestCatch,\r\n      filteredCastTotal: newFilteredCastToltal,\r\n    };\r\n\r\n    newAllDaysOfYear.splice(61, 1);\r\n    newAllDaysOfYear.splice(62, 1);\r\n    newAllDaysOfYear.splice(124, 1);\r\n    newAllDaysOfYear.splice(186, 1);\r\n    newAllDaysOfYear.splice(279, 1);\r\n    newAllDaysOfYear.splice(341, 1);\r\n\r\n    this.setState({\r\n      generalStats: newGeneralStats,\r\n      daysOfYearArray: newAllDaysOfYear,\r\n      dayArray: newDayArray,\r\n      baitUsage: filteredBaitUsage,\r\n      styleUsage: filteredStyleUsage,\r\n      catchSpecies: filteredSpeciesList,\r\n    });\r\n  };\r\n\r\n  updateFilterList = (lakeIndexFilter, baitFilter, styleFilter) => {\r\n    let newFilterList = [];\r\n    this.props.castHistory.map((cast, index) => {\r\n      if (lakeIndexFilter !== null) {\r\n        if (lakeIndexFilter !== cast.lakeIndex) {\r\n          return;\r\n        }\r\n      }\r\n      if (baitFilter !== null) {\r\n        if (baitFilter !== cast.bait) {\r\n          return;\r\n        }\r\n      }\r\n      if (styleFilter !== null) {\r\n        if (styleFilter !== cast.style) {\r\n          return;\r\n        }\r\n      }\r\n      newFilterList.push(index);\r\n    });\r\n    this.mapStats(newFilterList);\r\n  };\r\n\r\n  setLakeFilter = (index) => {\r\n    let newLakeFilter = this.state.lakeIndexFilter;\r\n    newLakeFilter = index;\r\n    this.setState({ lakeIndexFilter: newLakeFilter });\r\n    this.updateFilterList(\r\n      newLakeFilter,\r\n      this.state.baitFilter,\r\n      this.state.styleFilter\r\n    );\r\n  };\r\n\r\n  setBaitFilter = (bait) => {\r\n    let newBaitFilter = this.state.baitFilter;\r\n    newBaitFilter = bait;\r\n    this.setState({ baitFilter: newBaitFilter });\r\n    this.updateFilterList(\r\n      this.state.lakeIndexFilter,\r\n      newBaitFilter,\r\n      this.state.styleFilter\r\n    );\r\n  };\r\n\r\n  setStyleFilter = (style) => {\r\n    let newStyleFilter = this.state.styleFilter;\r\n    newStyleFilter = style;\r\n\r\n    this.updateFilterList(\r\n      this.state.lakeIndexFilter,\r\n      this.state.baitFilter,\r\n      newStyleFilter\r\n    );\r\n    this.setState({ styleFilter: newStyleFilter });\r\n  };\r\n\r\n  changeLakeFilterx;\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isCastStats ? (\r\n          <div className={styles.container}>\r\n            <div className={styles.filterContainer}>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"info\"\r\n                title={\r\n                  this.state.lakeIndexFilter !== null\r\n                    ? this.props.lakes[this.state.lakeIndexFilter].name\r\n                    : \"All lakes\"\r\n                }\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey={0}\r\n                  onClick={() => {\r\n                    this.setLakeFilter(null);\r\n                  }}\r\n                >\r\n                  All lakes\r\n                </Dropdown.Item>\r\n                {this.props.lakes.map((lake, index) => (\r\n                  <Dropdown.Item\r\n                    eventKey={index + 1}\r\n                    onClick={() => {\r\n                      this.setLakeFilter(index);\r\n                      console.log(index);\r\n                    }}\r\n                  >\r\n                    {lake.name}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"info\"\r\n                title={\r\n                  this.state.baitFilter !== null\r\n                    ? this.state.baitFilter\r\n                    : \"All baits\"\r\n                }\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey={0}\r\n                  onClick={() => {\r\n                    this.setBaitFilter(null);\r\n                  }}\r\n                >\r\n                  All baits\r\n                </Dropdown.Item>\r\n                {this.props.baits.map((bait, index) => (\r\n                  <Dropdown.Item\r\n                    eventKey={index + 1}\r\n                    onClick={() => {\r\n                      this.setBaitFilter(bait);\r\n                    }}\r\n                  >\r\n                    {bait}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"info\"\r\n                title={\r\n                  this.state.styleFilter !== null\r\n                    ? this.state.styleFilter\r\n                    : \"All styles\"\r\n                }\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey={0}\r\n                  onClick={() => {\r\n                    this.setStyleFilter(null);\r\n                  }}\r\n                >\r\n                  All styles\r\n                </Dropdown.Item>\r\n                {this.props.styles.map((style, index) => (\r\n                  <Dropdown.Item\r\n                    eventKey={index + 1}\r\n                    onClick={() => {\r\n                      this.setStyleFilter(style);\r\n                    }}\r\n                  >\r\n                    {style}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </div>\r\n\r\n            <div className={styles.generalStats}>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Time cast:</div>{\" \"}\r\n                {this.props.mSToReadable(this.state.generalStats.timeCasted)}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Heaviest catch:</div>{\" \"}\r\n                {this.props.kilosToPoundsReadable(\r\n                  this.state.generalStats.heaviestCatch\r\n                )}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Catches:</div>{\" \"}\r\n                {this.state.generalStats.catches}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Catch rate:</div>{\" \"}\r\n                {(this.state.generalStats.catchRate * 100).toFixed(0)}%\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Bites:</div>{\" \"}\r\n                {this.state.generalStats.bites}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Casts:</div>{\" \"}\r\n                {this.state.generalStats.filteredCastTotal}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.categoryStats}>\r\n              <div className={styles.timeGraphContainer}>\r\n                <div className={styles.year}>\r\n                  {this.state.daysOfYearArray.map((day, index) => (\r\n                    <div className={styles.day}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          width: \"0.2vw\",\r\n                          height: day < 10 ? `${8 - day * 0.8}vh` : \"8vh\",\r\n                        }}\r\n                      ></div>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"green\",\r\n                          width: \"0.2vw\",\r\n                          height: day < 10 ? `${day * 0.8}vh` : \"8vh\",\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className={styles.timeGraphContainer}>\r\n                <div className={styles.hours}>\r\n                  {this.state.dayArray.map((hour, index) => (\r\n                    <div className={styles.hour}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          width: `${80 / 24}vw`,\r\n                          height: hour < 10 ? `${8 - hour * 0.8}vh` : \"8vh\",\r\n                        }}\r\n                      ></div>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"green\",\r\n                          width: `${80 / 24}vw`,\r\n                          height: hour < 10 ? `${hour * 0.8}vh` : \"8vh\",\r\n                        }}\r\n                      ></div>\r\n                      <div className={styles.hourScale}> {index} </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.graphContainer}>\r\n                {this.state.baitUsage.map((bait, index) =>\r\n                  bait ? (\r\n                    <div\r\n                      className={styles.graph}\r\n                      style={{\r\n                        width: `${\r\n                          (80 /\r\n                            this.state.baitUsage.reduce((a, b) => a + b, 0)) *\r\n                          bait\r\n                        }vw`,\r\n                        color: \"white\",\r\n                        backgroundColor:\r\n                          index % 4 === 0\r\n                            ? \"blue\"\r\n                            : index % 4 === 1\r\n                            ? \"red\"\r\n                            : index % 4 === 2\r\n                            ? \"green\"\r\n                            : \"yellow\",\r\n                        fontSize: \"small\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {index === this.props.baits.length\r\n                        ? \"NA\"\r\n                        : this.props.baits[index]}\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n              </div>\r\n\r\n              <div className={styles.graphContainer}>\r\n                {this.state.styleUsage.map((style, index) =>\r\n                  style ? (\r\n                    <div\r\n                      className={styles.graph}\r\n                      style={{\r\n                        width: `${\r\n                          (80 /\r\n                            this.state.styleUsage.reduce((a, b) => a + b, 0)) *\r\n                          style\r\n                        }vw`,\r\n                        color: \"white\",\r\n                        backgroundColor:\r\n                          index % 4 === 0\r\n                            ? \"blue\"\r\n                            : index % 4 === 1\r\n                            ? \"red\"\r\n                            : index % 4 === 2\r\n                            ? \"green\"\r\n                            : \"yellow\",\r\n                        fontSize: \"small\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {index === this.props.styles.length\r\n                        ? \"NA\"\r\n                        : this.props.styles[index]}\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n              </div>\r\n\r\n              <div className={styles.graphContainer}>\r\n                {this.state.catchSpecies.map((species, index) =>\r\n                  species ? (\r\n                    <div\r\n                      className={styles.graph}\r\n                      style={{\r\n                        width: `${\r\n                          (80 /\r\n                            this.state.catchSpecies.reduce(\r\n                              (a, b) => a + b,\r\n                              0\r\n                            )) *\r\n                          species\r\n                        }vw`,\r\n                        color: \"white\",\r\n                        backgroundColor:\r\n                          index % 4 === 0\r\n                            ? \"blue\"\r\n                            : index % 4 === 1\r\n                            ? \"red\"\r\n                            : index % 4 === 2\r\n                            ? \"green\"\r\n                            : \"yellow\",\r\n                        fontSize: \"small\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {index === this.props.species.length\r\n                        ? \"NA\"\r\n                        : this.props.species[index]}\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <Button\r\n              className={styles.backButton}\r\n              variant=\"primary\"\r\n              onClick={this.resetStatsScreen}\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        ) : this.state.isRankStats ? (\r\n          <div className={styles.container}>\r\n            <div className={styles.statsContainer}>\r\n              <Rankings\r\n                lakes={this.props.lakes}\r\n                baits={this.props.baits}\r\n                styles={this.props.styles}\r\n                species={this.props.species}\r\n                setLakeFilter={this.setLakeFilter}\r\n                setBaitFilter={this.setBaitFilter}\r\n                setStyleFilter={this.setStyleFilter}\r\n                lakeIndexFilter={this.state.lakeIndexFilter}\r\n                baitFilter={this.state.baitFilter}\r\n                styleFilter={this.state.styleFilter}\r\n                baitUsage={this.state.baitUsage}\r\n                styleUsage={this.state.styleUsage}\r\n                catchSpecies={this.state.catchSpecies}\r\n              ></Rankings>\r\n            </div>\r\n            <Button\r\n              className={styles.backButton}\r\n              variant=\"primary\"\r\n              onClick={this.resetStatsScreen}\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.container}>\r\n            <div className={styles.statsOptions}>\r\n              <Button\r\n                className={styles.statSelectorButton}\r\n                variant=\"primary\"\r\n                onClick={this.showCastStats}\r\n              >\r\n                Cast stats\r\n              </Button>\r\n              <Button\r\n                className={styles.statSelectorButton}\r\n                variant=\"primary\"\r\n                onClick={this.showRankings}\r\n              >\r\n                Rankings\r\n              </Button>\r\n            </div>\r\n            <Link to=\"/fishv2/\">\r\n              <Button className={styles.backButton} variant=\"primary\">\r\n                Back\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./Home\";\nimport Lakes from \"./Lakes\";\nimport Session from \"./Session\";\nimport Catch from \"./Catch\";\nimport Statistics from \"./Statistics\";\n\n//date to be stored as utc string and parsed on use due to localstrorage corrupting date objects stored directly\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [{ name: \"Holton\", name: \"Alderby\" }],\n      castHistory: [],\n\n      species: [\"Roach\", \"Pike\", \"Carp\", \"Perch\"],\n      baits: [\"Maggot\", \"Corn\"],\n      styles: [\"Ledger\", \"Float\"],\n      currentSession: null,\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/fishv2/\"\n            exact\n            render={(props) => (\n              <Home currentSession={this.state.currentSession}></Home>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/lakes\"\n            exact\n            render={(props) => (\n              <Lakes\n                lakes={this.state.lakes}\n                addLake={this.addLake}\n                editLake={this.editLake}\n                deleteLake={this.deleteLake}\n                startSession={this.startSession}\n                currentSession={this.state.currentSession}\n              ></Lakes>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/session\"\n            render={(props) => (\n              <Session\n                lakes={this.state.lakes}\n                currentSession={this.state.currentSession}\n                baits={this.state.baits}\n                styles={this.state.styles}\n                endSession={this.endSession}\n                cast={this.cast}\n                endCast={this.endCast}\n                recordCatchFail={this.recordCatchFail}\n                addBite={this.addBite}\n                recordReelIn={this.recordReelIn}\n                changeBait={this.changeBait}\n                changeStyle={this.changeStyle}\n              ></Session>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/catch\"\n            render={(props) => (\n              <Catch\n                lakes={this.state.lakes}\n                currentSession={this.state.currentSession}\n                species={this.state.species}\n                changeSpecies={this.changeSpecies}\n                recordCatchSuccess={this.recordCatchSuccess}\n                endCast={this.endCast}\n                mSToDate={this.mSToDate}\n                kilosToPoundsReadable={this.kilosToPoundsReadable}\n              ></Catch>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/stats\"\n            render={(props) => (\n              <Statistics\n                castHistory={this.state.castHistory}\n                lakes={this.state.lakes}\n                baits={this.state.baits}\n                styles={this.state.styles}\n                species={this.state.species}\n                mSToReadable={this.mSToReadable}\n                kilosToPoundsReadable={this.kilosToPoundsReadable}\n                mSToDate={this.mSToDate}\n              ></Statistics>\n            )}\n          ></Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"currentSession\")) {\n      let savedSession = localStorage.getItem(\"currentSession\");\n      savedSession = JSON.parse(savedSession);\n      this.setState({ currentSession: savedSession });\n    }\n\n    if (localStorage.getItem(\"lakes\")) {\n      let savedLakes = localStorage.getItem(\"lakes\");\n      savedLakes = JSON.parse(savedLakes);\n      this.setState({ lakes: savedLakes });\n    }\n\n    if (localStorage.getItem(\"castHistory\")) {\n      let savedCastHistory = localStorage.getItem(\"castHistory\");\n      savedCastHistory = JSON.parse(savedCastHistory);\n      this.setState({ castHistory: savedCastHistory });\n    }\n\n    if (localStorage.getItem(\"baits\")) {\n      let savedBaits = localStorage.getItem(\"baits\");\n      savedBaits = JSON.parse(savedBaits);\n      this.setState({ baits: savedBaits });\n    }\n\n    if (localStorage.getItem(\"styles\")) {\n      let savedStyles = localStorage.getItem(\"styles\");\n      savedStyles = JSON.parse(savedStyles);\n      this.setState({ styles: savedStyles });\n    }\n\n    if (localStorage.getItem(\"species\")) {\n      let savedSpecies = localStorage.getItem(\"species\");\n      savedSpecies = JSON.parse(savedSpecies);\n      this.setState({ species: savedSpecies });\n    }\n  }\n\n  //lake management\n  addLake = () => {\n    let newLakeName = window.prompt(\"Lake:\", \"\");\n    //take user input\n    if (newLakeName) {\n      let newLake = { name: newLakeName };\n      //initialize lake\n      let newLakes = [...this.state.lakes];\n      newLakes.push(newLake);\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n      //add lake to state\n    }\n  };\n\n  editLake = (index) => {\n    let newLakeName = window.prompt(\"Lake:\", \"\");\n    //take userinput\n    if (newLakeName) {\n      let editedLake = { name: newLakeName };\n      //update lake\n      let newLakes = [...this.state.lakes];\n      newLakes[index] = editedLake;\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n      //update lake state\n    }\n  };\n\n  deleteLake = (index) => {\n    //prompt user\n    //delete lake\n    if (window.confirm(\"Delete this lake?\")) {\n      let newLakes = this.state.lakes;\n      newLakes.splice(index, 1);\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n    }\n  };\n\n  startSession = (index) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession = {\n      lakeIndex: index,\n      casting: false,\n      casts: 0,\n      catches: 0,\n      castingDuration: 0,\n      bait: null,\n      style: null,\n      currentCast: {\n        catchSuccess: null,\n        castTime: null,\n        reelInTime: null,\n        bites: 0,\n      },\n      castHistory: [],\n    };\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  endSession = () => {\n    let newCastHistory = [...this.state.castHistory];\n    newCastHistory = newCastHistory.concat(\n      this.state.currentSession.castHistory\n    );\n    let newCurrentSession = this.state,\n      currentSession;\n    newCurrentSession = null;\n\n    this.setState(\n      {\n        castHistory: newCastHistory,\n\n        currentSession: newCurrentSession,\n      },\n      localStorage.setItem(\"castHistory\", JSON.stringify(newCastHistory)),\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  //casting screen\n  cast = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.casting = true;\n    newCurrentSession.casts++;\n    let castTime = new Date();\n    newCurrentSession.currentCast.castTime = castTime.getTime();\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n  //set state to casting\n  //start cast data collection\n\n  recordReelIn = () => {\n    let newCurrentSession = this.state.currentSession;\n    let reelInTime = new Date();\n    newCurrentSession.currentCast.reelInTime = reelInTime.getTime();\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  recordCatchSuccess = (recordedSpecies, recordedWeight) => {\n    let cast = this.state.currentSession.currentCast;\n    let thisBites = cast.bites + 1;\n    let thisCastTime = cast.castTime;\n    let thisReelInTime = cast.reelInTime;\n    let thisDuration = cast.reelInTime - cast.castTime;\n    let thisLakeName = this.state.lakes[this.state.currentSession.lakeIndex]\n      .name;\n    let thisLakeIndex = this.state.currentSession.lakeIndex;\n    let thisBait = this.state.currentSession.bait;\n    let thisStyle = this.state.currentSession.style;\n    let thisSpecies = recordedSpecies;\n    let thisWeight = recordedWeight;\n    let thisCatchSuccess = true;\n    let thisCast = {\n      bites: thisBites,\n      castTime: thisCastTime,\n      reelInTime: thisReelInTime,\n      duration: thisDuration,\n      lakeName: thisLakeName,\n      lakeIndex: thisLakeIndex,\n      bait: thisBait,\n      style: thisStyle,\n      species: thisSpecies,\n      weight: thisWeight,\n      catchSuccess: thisCatchSuccess,\n    };\n\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.castHistory.push(thisCast);\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n  //update cast history and fish history\n  //this.endCast\n\n  recordCatchFail = () => {\n    let cast = this.state.currentSession.currentCast;\n    let thisBites = cast.bites;\n    let thisCastTime = cast.castTime;\n    let thisReelInTime = cast.reelInTime;\n    let thisDuration = cast.reelInTime - cast.castTime;\n    let thisLakeName = this.state.lakes[this.state.currentSession.lakeIndex]\n      .name;\n    let thisLakeIndex = this.state.currentSession.lakeIndex;\n    let thisBait = this.state.currentSession.bait;\n    let thisStyle = this.state.currentSession.style;\n    let thisCatchSuccess = false;\n    let thisCast = {\n      bites: thisBites,\n      castTime: thisCastTime,\n      reelInTime: thisReelInTime,\n      duration: thisDuration,\n      lakeName: thisLakeName,\n      lakeIndex: thisLakeIndex,\n      bait: thisBait,\n      style: thisStyle,\n      catchSuccess: thisCatchSuccess,\n    };\n\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.castHistory.push(thisCast);\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  }; //update cast history\n  //this.endCast\n\n  endCast = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.casting = false;\n\n    newCurrentSession.currentCast.bites = 0;\n\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  addBite = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.currentCast.bites++;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  changeBait = (bait) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.bait = bait;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  changeStyle = (style) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.style = style;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  mSToDate = (milliseconds) => {\n    let date = new Date();\n    date.setTime(milliseconds);\n    return date;\n  };\n\n  mSToReadable = (milliseconds) => {\n    let seconds = (milliseconds / 1000) % 60;\n    let secondsNoDecimal = seconds.toFixed();\n    let minutes = ((milliseconds / 1000 - seconds) / 60) % 60;\n    let hours = ((milliseconds / 1000 - seconds) / 60 - minutes) / 60;\n\n    return `${hours < 10 ? `0${hours}` : hours}:${\n      minutes < 10 ? `0${minutes}` : minutes\n    }:${secondsNoDecimal < 10 ? `0${secondsNoDecimal}` : secondsNoDecimal}`;\n  };\n\n  kilosToPoundsReadable = (weight) => {\n    let weightOunces = weight / 0.028349;\n    let remainOunces = weightOunces % 16;\n    let pounds = (weightOunces - remainOunces) / 16;\n    return `${pounds} lbs ${remainOunces.toFixed(0)} ounces`;\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}