{"version":3,"sources":["catch.module.css","session.module.css","lakes.module.css","home.module.css","statistics.module.css","Home.js","Lakes.js","Session.js","Catch.js","Statistics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","useState","toSession","setToSession","to","className","styles","container","Button","button","size","variant","currentSession","onClick","Lakes","accordionContainer","Accordion","defaultActiveKey","lakes","map","lake","index","Card","Key","Toggle","as","Header","eventKey","lakeHeader","name","sz","event","stopPropagation","startSession","Collapse","Body","lakeBody","bodyButtons","editLake","deleteLake","length","addLake","backButton","Session","toHome","setToHome","toCatch","setToCatch","header","lakeIndex","castInfo","casting","cast","casts","currentCast","bites","castingOptions","DropdownButton","ButtonGroup","title","bait","baits","Dropdown","Item","changeBait","style","changeStyle","verticalButtons","catchButton","recordReelIn","horizontalButtons","otherButton","addBite","recordCatchFail","endCast","endSession","Catch","changeSpecies","newSpecies","newCatch","state","catch","species","setState","changeWeight","weight","target","value","addCatch","recordCatchSuccess","castTime","catchTime","this","thisCatch","reelInTime","DropdownItem","Form","Group","controlId","Label","kilosToPoundsReadable","Control","type","min","max","step","onChange","catchStats","statsPair","mSToDate","toLocaleDateString","toLocaleTimeString","recordButton","React","Component","Statistics","resetStatsScreen","filteredCastList","generalStats","catchRate","timeCasted","catches","heaviestCatch","filteredCastTotal","isCastStats","isFishStats","showCastStats","newFilteredList","castHistory","push","mapStats","filteredCatches","filteredTimeCasted","filteredBites","filteredHeaviestCatch","castIndex","catchSuccess","duration","newGeneralStats","updateFilterList","lakeIndexFilter","baitFilter","styleFilter","newFilterList","setLakeFilter","newLakeFilter","setBaitFilter","newBaitFilter","setStyleFilter","newStyleFilter","daysOfYearArray","allDaysOFYear","i","filterContainer","console","log","generalStat","generalStatHeader","mSToReadable","toFixed","categoryStats","graphContainer","year","day","backgroundColor","width","height","statsButton","statsContainer","statSelectorButton","App","newLakeName","window","prompt","newLake","newLakes","localStorage","setItem","JSON","stringify","editedLake","confirm","splice","newCurrentSession","castingDuration","newCastHistory","concat","Date","getTime","recordedSpecies","recordedWeight","thisCast","lakeName","milliseconds","date","setTime","seconds","secondsNoDecimal","minutes","hours","weightOunces","remainOunces","path","exact","render","getItem","savedSession","parse","savedLakes","savedCastHistory","savedBaits","savedStyles","savedSpecies","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cde0ae91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"catch_container__2PM1J\",\"species\":\"catch_species__1YkKM\",\"weight\":\"catch_weight__3W8MJ\",\"catchStats\":\"catch_catchStats__3b_MT\",\"statsPair\":\"catch_statsPair__P5rQi\",\"recordButton\":\"catch_recordButton__2lfeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"session_container__lCfA5\",\"header\":\"session_header__2r-16\",\"castInfo\":\"session_castInfo__1u3MJ\",\"castingOptions\":\"session_castingOptions__91fQk\",\"verticalButtons\":\"session_verticalButtons__Lw9As\",\"horizontalButtons\":\"session_horizontalButtons__yWM0a\",\"catchButton\":\"session_catchButton__kwDQb\",\"otherButton\":\"session_otherButton__39D0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakes_container__2X8aK\",\"accordionContainer\":\"lakes_accordionContainer__J0kBt\",\"lakeHeader\":\"lakes_lakeHeader__3Hrvc\",\"lakeBody\":\"lakes_lakeBody__1E5C8\",\"bodyButtons\":\"lakes_bodyButtons__312n9\",\"backButton\":\"lakes_backButton__3EpyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__BAwCE\",\"button\":\"home_button__hXUXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"statistics_container__36Eba\",\"statSelectorButton\":\"statistics_statSelectorButton__Xk6JP\",\"filterContainer\":\"statistics_filterContainer__OE6JI\",\"generalStats\":\"statistics_generalStats__2NTaS\",\"generalStat\":\"statistics_generalStat__3TYK1\",\"generalStatHeader\":\"statistics_generalStatHeader___6c5W\",\"categoryStats\":\"statistics_categoryStats__1viJP\",\"statsButton\":\"statistics_statsButton__2ZOK3\",\"graphContainer\":\"statistics_graphContainer__3xyp2\",\"year\":\"statistics_year__3ubV0\"};","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./home.module.css\";\r\n\r\nfunction Home(props) {\r\n  const [toSession, setToSession] = useState(false);\r\n\r\n  const toCurrentSession = () => {\r\n    if (props.currentSession) {\r\n      setToSession(true);\r\n    }\r\n  };\r\n\r\n  if (toSession) {\r\n    return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Link to=\"/fishv2/lakes\">\r\n        <Button className={styles.button} size=\"lg\">\r\n          Lakes\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/fishv2/stats\">\r\n        <Button className={styles.button} size=\"lg\">\r\n          Statistics\r\n        </Button>\r\n      </Link>\r\n\r\n      <Button\r\n        className={styles.button}\r\n        size=\"lg\"\r\n        variant={props.currentSession ? \"primary\" : \"secondary\"}\r\n        onClick={toCurrentSession}\r\n      >\r\n        Session\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport styles from \"./lakes.module.css\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nfunction Lakes(props) {\r\n  const [toSession, setToSession] = useState(false);\r\n\r\n  const addLake = (event) => {\r\n    props.addLake();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const editLake = (event, index) => {\r\n    props.editLake(index);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const deleteLake = (index) => {\r\n    props.deleteLake(index);\r\n  };\r\n\r\n  const startSession = (event, index) => {\r\n    if (!props.currentSession) {\r\n      props.startSession(index);\r\n      setToSession(true);\r\n    } else {\r\n      event.stopPropagation();\r\n    }\r\n    //implement end current session\r\n  };\r\n\r\n  if (toSession) {\r\n    return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.accordionContainer}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {props.lakes.map((lake, index) => (\r\n            <Card Key={index}>\r\n              <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n                <div className={styles.lakeHeader}>\r\n                  {lake.name}\r\n                  <div>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      sz=\"lg\"\r\n                      onClick={(event) => {\r\n                        startSession(event, index);\r\n                      }}\r\n                    >\r\n                      Fish\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={index}>\r\n                <Card.Body>\r\n                  <div className={styles.lakeBody}>\r\n                    Stats here some time\r\n                    <div className={styles.bodyButtons}>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        sz=\"lg\"\r\n                        onClick={(event) => editLake(event, index)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => deleteLake(index)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          ))}\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={props.lakes.length}>\r\n              <div className={styles.lakeHeader}>\r\n                Add a lake\r\n                <div>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    sz=\"lg\"\r\n                    onClick={(event) => addLake(event)}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Accordion.Toggle>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n      <Link to=\"/fishv2/\">\r\n        <Button className={styles.backButton} variant=\"primary\">\r\n          Back\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lakes;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./session.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\n\r\nfunction Session(props) {\r\n  const [toHome, setToHome] = useState(false);\r\n  const [toCatch, setToCatch] = useState(false);\r\n\r\n  const endSession = () => {\r\n    setToHome(true);\r\n    props.endSession();\r\n  };\r\n\r\n  const cast = () => {\r\n    props.cast();\r\n  };\r\n\r\n  const endCast = () => {\r\n    props.recordReelIn();\r\n    props.recordCatchFail();\r\n    props.endCast();\r\n  };\r\n\r\n  const addBite = () => {\r\n    if (props.currentSession.casting) {\r\n      props.addBite();\r\n    }\r\n  };\r\n\r\n  const changeBait = (bait) => {\r\n    props.changeBait(bait);\r\n  };\r\n\r\n  const changeStyle = (style) => {\r\n    props.changeStyle(style);\r\n  };\r\n\r\n  const recordCatchDetails = () => {\r\n    if (props.currentSession.casting) {\r\n      props.recordReelIn();\r\n      setToCatch(true);\r\n    }\r\n  };\r\n\r\n  if (toHome) {\r\n    return <Redirect to=\"/fishv2/\"></Redirect>;\r\n  }\r\n  if (toCatch) {\r\n    return <Redirect to=\"/fishv2/catch\"></Redirect>;\r\n  }\r\n\r\n  return props.currentSession ? (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        {props.lakes[props.currentSession.lakeIndex].name}{\" \"}\r\n        <Link to=\"/fishv2/\">\r\n          <Button>home</Button>\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className={styles.castInfo}\r\n        onClick={props.currentSession.casting === false ? cast : null}\r\n      >\r\n        {props.currentSession.casting === true ? (\r\n          <div>\r\n            {props.currentSession.casts}{\" \"}\r\n            {props.currentSession.currentCast.bites}\r\n          </div>\r\n        ) : (\r\n          \"CAST\"\r\n        )}\r\n      </div>{\" \"}\r\n      <div className={styles.castingOptions}>\r\n        <DropdownButton\r\n          as={ButtonGroup}\r\n          variant=\"info\"\r\n          title={\r\n            props.currentSession.bait ? props.currentSession.bait : \"NO BAIT\"\r\n          }\r\n        >\r\n          {props.baits.map((bait, index) => (\r\n            <Dropdown.Item\r\n              eventKey={index}\r\n              onClick={() => {\r\n                changeBait(bait);\r\n              }}\r\n            >\r\n              {bait}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n\r\n        <DropdownButton\r\n          as={ButtonGroup}\r\n          variant=\"info\"\r\n          title={\r\n            props.currentSession.style ? props.currentSession.style : \"NO STYLE\"\r\n          }\r\n        >\r\n          {props.styles.map((style, index) => (\r\n            <Dropdown.Item\r\n              eventKey={index}\r\n              onClick={() => {\r\n                changeStyle(style);\r\n              }}\r\n            >\r\n              {style}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </div>\r\n      <div className={styles.verticalButtons}>\r\n        <Button\r\n          className={styles.catchButton}\r\n          variant=\"success\"\r\n          size=\"lg\"\r\n          onClick={recordCatchDetails}\r\n        >\r\n          FISH LANDED\r\n        </Button>{\" \"}\r\n        <div className={styles.horizontalButtons}>\r\n          <Button\r\n            className={styles.otherButton}\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            onClick={addBite}\r\n          >\r\n            BITE OR RUN\r\n          </Button>{\" \"}\r\n          <Button\r\n            className={styles.otherButton}\r\n            variant={props.currentSession.casting ? \"info\" : \"danger\"}\r\n            size=\"lg\"\r\n            onClick={props.currentSession.casting ? endCast : endSession}\r\n          >\r\n            {props.currentSession.casting ? \"END CAST\" : \"END SESSION\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\"></Redirect>\r\n  );\r\n}\r\n\r\nexport default Session;\r\n","import React from \"react\";\r\nimport styles from \"./catch.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Catch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      catch: {\r\n        lakeIndex: null,\r\n        castTime: null,\r\n        catchTime: null,\r\n        species: null,\r\n        weight: null,\r\n        bait: null,\r\n        style: null,\r\n      },\r\n      toSession: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.currentSession) {\r\n      let thisCatch = this.state.catch;\r\n      thisCatch.lakeIndex = this.props.currentSession.lakeIndex;\r\n      thisCatch.castTime = this.props.currentSession.currentCast.castTime;\r\n      thisCatch.catchTime = this.props.currentSession.currentCast.reelInTime;\r\n      thisCatch.bait = this.props.currentSession.bait;\r\n      thisCatch.style = this.props.currentSession.style;\r\n      this.setState({ catch: thisCatch });\r\n    }\r\n  }\r\n\r\n  changeSpecies = (newSpecies) => {\r\n    let newCatch = this.state.catch;\r\n    newCatch.species = newSpecies;\r\n    this.setState({ catch: newCatch });\r\n  };\r\n\r\n  changeWeight = (event) => {\r\n    let newCatch = this.state.catch;\r\n    newCatch.weight = event.target.value;\r\n    this.setState({ catch: newCatch });\r\n  };\r\n\r\n  addCatch = () => {\r\n    this.props.recordCatchSuccess(\r\n      this.state.catch.species,\r\n      this.state.catch.weight\r\n    );\r\n    this.props.endCast();\r\n    this.setState({ toSession: true });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.currentSession) {\r\n      return <Redirect to=\"/fishv2/\"></Redirect>;\r\n    }\r\n\r\n    if (this.state.toSession) {\r\n      return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <DropdownButton\r\n          size=\"lg\"\r\n          className={styles.species}\r\n          as={ButtonGroup}\r\n          variant=\"primary\"\r\n          title={\r\n            this.state.catch.species ? this.state.catch.species : \"NO SPECIES\"\r\n          }\r\n        >\r\n          {this.props.species.map((species, index) => (\r\n            <DropdownItem\r\n              eventKey={index}\r\n              onClick={() => {\r\n                this.changeSpecies(species);\r\n              }}\r\n            >\r\n              {species}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownButton>\r\n\r\n        <Form className={styles.weight}>\r\n          <Form.Group controlId=\"weightRange\">\r\n            <Form.Label>\r\n              {this.state.catch.weight\r\n                ? this.props.kilosToPoundsReadable(this.state.catch.weight)\r\n                : \"NO WEIGHT RECORDED\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"20\"\r\n              step=\"0.028349\"\r\n              onChange={this.changeWeight}\r\n              value={this.state.catch.weight}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <div className={styles.catchStats}>\r\n          <div className={styles.statsPair}>\r\n            <div>\r\n              {this.state.catch.lakeIndex !== null\r\n                ? this.props.lakes[this.state.catch.lakeIndex].name\r\n                : \"NA\"}\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              {this.props\r\n                .mSToDate(this.state.catch.catchTime)\r\n                .toLocaleDateString()}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Cast time:{\" \"}\r\n            <div>\r\n              {this.props\r\n                .mSToDate(this.state.catch.castTime)\r\n                .toLocaleTimeString()}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Catch Time:{\" \"}\r\n            <div>\r\n              {this.props\r\n                .mSToDate(this.state.catch.catchTime)\r\n                .toLocaleTimeString()}{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Species:{\" \"}\r\n            <div>\r\n              {this.state.catch.species ? this.state.catch.species : \"NA\"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Weight:{\" \"}\r\n            <div>\r\n              {this.state.catch.weight ? this.state.catch.weight : \"NA\"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Bait:{\" \"}\r\n            <div>{this.state.catch.bait ? this.state.catch.bait : \"NA\"}</div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Style:{\" \"}\r\n            <div>{this.state.catch.style ? this.state.catch.style : \"NA\"}</div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant=\"success\"\r\n          size=\"lg\"\r\n          className={styles.recordButton}\r\n          onClick={this.addCatch}\r\n        >\r\n          ADD CATCH\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Catch;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./statistics.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      daysOfYearArray: [],\r\n      filteredCastList: [],\r\n      generalStats: {\r\n        catchRate: null,\r\n        timeCasted: null,\r\n        bites: null,\r\n        catches: null,\r\n        heaviestCatch: null,\r\n      },\r\n      isCastStats: false,\r\n      isFishStats: false,\r\n      lakeIndexFilter: null,\r\n      baitFilter: null,\r\n      styleFilter: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let allDaysOFYear = [...this.state.daysOfYearArray];\r\n    for (let i = 0; i < 366; i++) {\r\n      i % 2 === 0 ? allDaysOFYear.push(0) : allDaysOFYear.push(i % 15);\r\n    }\r\n    this.setState({ daysOfYearArray: allDaysOFYear });\r\n  }\r\n\r\n  resetStatsScreen = () => {\r\n    this.setState({\r\n      filteredCastList: [],\r\n      generalStats: {\r\n        catchRate: null,\r\n        timeCasted: null,\r\n        bites: null,\r\n        catches: null,\r\n        heaviestCatch: null,\r\n        filteredCastTotal: null,\r\n      },\r\n      isCastStats: false,\r\n      isFishStats: false,\r\n    });\r\n  };\r\n\r\n  showCastStats = () => {\r\n    let newFilteredList = [];\r\n    let castStats = [...this.props.castHistory];\r\n    castStats.map((cast, index) => {\r\n      newFilteredList.push(index);\r\n    });\r\n    this.mapStats(newFilteredList);\r\n    this.setState({ isCastStats: true });\r\n  };\r\n\r\n  mapStats = (filteredCastList) => {\r\n    let newFilter = filteredCastList;\r\n    let filteredCatches = 0;\r\n    let filteredTimeCasted = 0;\r\n    let filteredBites = 0;\r\n    let filteredHeaviestCatch = 0;\r\n    newFilter.map((castIndex) => {\r\n      if (this.props.castHistory[castIndex].catchSuccess === true) {\r\n        filteredCatches++;\r\n      }\r\n\r\n      filteredTimeCasted += this.props.castHistory[castIndex].duration;\r\n      filteredBites += this.props.castHistory[castIndex].bites;\r\n      if (this.props.castHistory[castIndex].weight > filteredHeaviestCatch) {\r\n        filteredHeaviestCatch = this.props.castHistory[castIndex].weight;\r\n      }\r\n    });\r\n\r\n    let newCatchRate = filteredCatches / filteredCastList.length;\r\n    let newCastingDuration = filteredTimeCasted;\r\n    let newBites = filteredBites;\r\n    let newCatches = filteredCatches;\r\n    let newHeaviestCatch = filteredHeaviestCatch;\r\n    let newFilteredCastToltal = filteredCastList.length;\r\n\r\n    let newGeneralStats = {\r\n      catchRate: newCatchRate,\r\n      timeCasted: newCastingDuration,\r\n      bites: newBites,\r\n      catches: newCatches,\r\n      heaviestCatch: newHeaviestCatch,\r\n      filteredCastTotal: newFilteredCastToltal,\r\n    };\r\n    this.setState({ generalStats: newGeneralStats });\r\n  };\r\n\r\n  updateFilterList = (lakeIndexFilter, baitFilter, styleFilter) => {\r\n    let newFilterList = [];\r\n    this.props.castHistory.map((cast, index) => {\r\n      if (lakeIndexFilter !== null) {\r\n        if (lakeIndexFilter !== cast.lakeIndex) {\r\n          return;\r\n        }\r\n      }\r\n      if (baitFilter !== null) {\r\n        if (baitFilter !== cast.bait) {\r\n          return;\r\n        }\r\n      }\r\n      if (styleFilter !== null) {\r\n        if (styleFilter !== cast.style) {\r\n          return;\r\n        }\r\n      }\r\n      newFilterList.push(index);\r\n    });\r\n    this.mapStats(newFilterList);\r\n  };\r\n\r\n  setLakeFilter = (index) => {\r\n    let newLakeFilter = this.state.lakeIndexFilter;\r\n    newLakeFilter = index;\r\n    this.setState({ lakeIndexFilter: newLakeFilter });\r\n    this.updateFilterList(\r\n      newLakeFilter,\r\n      this.state.baitFilter,\r\n      this.state.styleFilter\r\n    );\r\n  };\r\n\r\n  setBaitFilter = (bait) => {\r\n    let newBaitFilter = this.state.baitFilter;\r\n    newBaitFilter = bait;\r\n    this.setState({ baitFilter: newBaitFilter });\r\n    this.updateFilterList(\r\n      this.state.lakeIndexFilter,\r\n      newBaitFilter,\r\n      this.state.styleFilter\r\n    );\r\n  };\r\n\r\n  setStyleFilter = (style) => {\r\n    let newStyleFilter = this.state.styleFilter;\r\n    newStyleFilter = style;\r\n    this.setState({ styleFilter: newStyleFilter });\r\n    this.updateFilterList(\r\n      this.state.lakeIndexFilter,\r\n      this.state.baitFilter,\r\n      newStyleFilter\r\n    );\r\n  };\r\n\r\n  changeLakeFilterx;\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isCastStats ? (\r\n          <div className={styles.container}>\r\n            <div className={styles.filterContainer}>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"info\"\r\n                title={\r\n                  this.state.lakeIndexFilter !== null\r\n                    ? this.props.lakes[this.state.lakeIndexFilter].name\r\n                    : \"All lakes\"\r\n                }\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey={0}\r\n                  onClick={() => {\r\n                    this.setLakeFilter(null);\r\n                  }}\r\n                >\r\n                  All lakes\r\n                </Dropdown.Item>\r\n                {this.props.lakes.map((lake, index) => (\r\n                  <Dropdown.Item\r\n                    eventKey={index + 1}\r\n                    onClick={() => {\r\n                      this.setLakeFilter(index);\r\n                      console.log(index);\r\n                    }}\r\n                  >\r\n                    {lake.name}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"info\"\r\n                title={\r\n                  this.state.baitFilter !== null\r\n                    ? this.state.baitFilter\r\n                    : \"All baits\"\r\n                }\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey={0}\r\n                  onClick={() => {\r\n                    this.setBaitFilter(null);\r\n                  }}\r\n                >\r\n                  All baits\r\n                </Dropdown.Item>\r\n                {this.props.baits.map((bait, index) => (\r\n                  <Dropdown.Item\r\n                    eventKey={index + 1}\r\n                    onClick={() => {\r\n                      this.setBaitFilter(bait);\r\n                    }}\r\n                  >\r\n                    {bait}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"info\"\r\n                title={\r\n                  this.state.styleFilter !== null\r\n                    ? this.state.styleFilter\r\n                    : \"All styles\"\r\n                }\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey={0}\r\n                  onClick={() => {\r\n                    this.setStyleFilter(null);\r\n                  }}\r\n                >\r\n                  All styles\r\n                </Dropdown.Item>\r\n                {this.props.styles.map((style, index) => (\r\n                  <Dropdown.Item\r\n                    eventKey={index + 1}\r\n                    onClick={() => {\r\n                      this.setStyleFilter(style);\r\n                    }}\r\n                  >\r\n                    {style}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </div>\r\n\r\n            <div className={styles.generalStats}>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Time casted:</div>{\" \"}\r\n                {this.props.mSToReadable(this.state.generalStats.timeCasted)}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Heaviest catch:</div>{\" \"}\r\n                {this.props.kilosToPoundsReadable(\r\n                  this.state.generalStats.heaviestCatch\r\n                )}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Catches:</div>{\" \"}\r\n                {this.state.generalStats.catches}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Catch rate:</div>{\" \"}\r\n                {this.state.generalStats.catchRate.toFixed(2) * 100}%\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Bites:</div>{\" \"}\r\n                {this.state.generalStats.bites}\r\n              </div>\r\n              <div className={styles.generalStat}>\r\n                <div className={styles.generalStatHeader}>Casts:</div>{\" \"}\r\n                {this.state.generalStats.filteredCastTotal}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.categoryStats}>\r\n              <div className={styles.graphContainer}>\r\n                <div>time</div>\r\n                <div className={styles.year}>\r\n                  {this.state.daysOfYearArray.map((day, index) => (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: day === 0 ? \"grey\" : \"green\",\r\n                        width: \"2vh\",\r\n                        height:\r\n                          day === 0\r\n                            ? \"2vh\"\r\n                            : day < 10\r\n                            ? `${day * 0.8}vh`\r\n                            : \"8vh\",\r\n                      }}\r\n                    ></div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Button\r\n              className={styles.statsButton}\r\n              variant=\"primary\"\r\n              onClick={this.resetStatsScreen}\r\n            >\r\n              stats\r\n            </Button>\r\n          </div>\r\n        ) : this.state.isFishStats ? (\r\n          <div className={styles.container}>\r\n            <div className={styles.statsContainer}>fishStats</div>\r\n            <Button variant=\"primary\" onClick={this.resetStatsScreen}>\r\n              stats\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.container}>\r\n            <Button\r\n              className={styles.statSelectorButton}\r\n              variant=\"primary\"\r\n              onClick={this.showCastStats}\r\n            >\r\n              Cast stats\r\n            </Button>\r\n            <Button className={styles.statSelectorButton} variant=\"primary\">\r\n              Fish stats\r\n            </Button>\r\n\r\n            <Link to=\"/fishv2/\">\r\n              <Button className={styles.statSelectorButton} variant=\"primary\">\r\n                Back\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./Home\";\nimport Lakes from \"./Lakes\";\nimport Session from \"./Session\";\nimport Catch from \"./Catch\";\nimport Statistics from \"./Statistics\";\n\n//date to be stored as utc string and parsed on use due to localstrorage corrupting date objects stored directly\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [{ name: \"Holton\", name: \"Alderby\" }],\n      castHistory: [],\n\n      species: [\"Roach\", \"Pike\", \"Carp\", \"Perch\"],\n      baits: [\"Maggot\", \"Corn\"],\n      styles: [\"Ledger\", \"Float\"],\n      currentSession: null,\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/fishv2/\"\n            exact\n            render={(props) => (\n              <Home currentSession={this.state.currentSession}></Home>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/lakes\"\n            exact\n            render={(props) => (\n              <Lakes\n                lakes={this.state.lakes}\n                addLake={this.addLake}\n                editLake={this.editLake}\n                deleteLake={this.deleteLake}\n                startSession={this.startSession}\n                currentSession={this.state.currentSession}\n              ></Lakes>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/session\"\n            render={(props) => (\n              <Session\n                lakes={this.state.lakes}\n                currentSession={this.state.currentSession}\n                baits={this.state.baits}\n                styles={this.state.styles}\n                endSession={this.endSession}\n                cast={this.cast}\n                endCast={this.endCast}\n                recordCatchFail={this.recordCatchFail}\n                addBite={this.addBite}\n                recordReelIn={this.recordReelIn}\n                changeBait={this.changeBait}\n                changeStyle={this.changeStyle}\n              ></Session>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/catch\"\n            render={(props) => (\n              <Catch\n                lakes={this.state.lakes}\n                currentSession={this.state.currentSession}\n                species={this.state.species}\n                changeSpecies={this.changeSpecies}\n                recordCatchSuccess={this.recordCatchSuccess}\n                endCast={this.endCast}\n                mSToDate={this.mSToDate}\n                kilosToPoundsReadable={this.kilosToPoundsReadable}\n              ></Catch>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/stats\"\n            render={(props) => (\n              <Statistics\n                castHistory={this.state.castHistory}\n                lakes={this.state.lakes}\n                baits={this.state.baits}\n                styles={this.state.styles}\n                mSToReadable={this.mSToReadable}\n                kilosToPoundsReadable={this.kilosToPoundsReadable}\n              ></Statistics>\n            )}\n          ></Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"currentSession\")) {\n      let savedSession = localStorage.getItem(\"currentSession\");\n      savedSession = JSON.parse(savedSession);\n      this.setState({ currentSession: savedSession });\n    }\n\n    if (localStorage.getItem(\"lakes\")) {\n      let savedLakes = localStorage.getItem(\"lakes\");\n      savedLakes = JSON.parse(savedLakes);\n      this.setState({ lakes: savedLakes });\n    }\n\n    if (localStorage.getItem(\"castHistory\")) {\n      let savedCastHistory = localStorage.getItem(\"castHistory\");\n      savedCastHistory = JSON.parse(savedCastHistory);\n      this.setState({ castHistory: savedCastHistory });\n    }\n\n    if (localStorage.getItem(\"baits\")) {\n      let savedBaits = localStorage.getItem(\"baits\");\n      savedBaits = JSON.parse(savedBaits);\n      this.setState({ baits: savedBaits });\n    }\n\n    if (localStorage.getItem(\"styles\")) {\n      let savedStyles = localStorage.getItem(\"styles\");\n      savedStyles = JSON.parse(savedStyles);\n      this.setState({ styles: savedStyles });\n    }\n\n    if (localStorage.getItem(\"species\")) {\n      let savedSpecies = localStorage.getItem(\"species\");\n      savedSpecies = JSON.parse(savedSpecies);\n      this.setState({ species: savedSpecies });\n    }\n  }\n\n  //lake management\n  addLake = () => {\n    let newLakeName = window.prompt(\"Lake:\", \"\");\n    //take user input\n    if (newLakeName) {\n      let newLake = { name: newLakeName };\n      //initialize lake\n      let newLakes = [...this.state.lakes];\n      newLakes.push(newLake);\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n      //add lake to state\n    }\n  };\n\n  editLake = (index) => {\n    let newLakeName = window.prompt(\"Lake:\", \"\");\n    //take userinput\n    if (newLakeName) {\n      let editedLake = { name: newLakeName };\n      //update lake\n      let newLakes = [...this.state.lakes];\n      newLakes[index] = editedLake;\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n      //update lake state\n    }\n  };\n\n  deleteLake = (index) => {\n    //prompt user\n    //delete lake\n    if (window.confirm(\"Delete this lake?\")) {\n      let newLakes = this.state.lakes;\n      newLakes.splice(index, 1);\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n    }\n  };\n\n  startSession = (index) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession = {\n      lakeIndex: index,\n      casting: false,\n      casts: 0,\n      catches: 0,\n      castingDuration: 0,\n      bait: null,\n      style: null,\n      currentCast: {\n        catchSuccess: null,\n        castTime: null,\n        reelInTime: null,\n        bites: 0,\n      },\n      castHistory: [],\n    };\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  endSession = () => {\n    let newCastHistory = [...this.state.castHistory];\n    newCastHistory = newCastHistory.concat(\n      this.state.currentSession.castHistory\n    );\n    let newCurrentSession = this.state,\n      currentSession;\n    newCurrentSession = null;\n\n    this.setState(\n      {\n        castHistory: newCastHistory,\n\n        currentSession: newCurrentSession,\n      },\n      localStorage.setItem(\"castHistory\", JSON.stringify(newCastHistory)),\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  //casting screen\n  cast = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.casting = true;\n    newCurrentSession.casts++;\n    let castTime = new Date();\n    newCurrentSession.currentCast.castTime = castTime.getTime();\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n  //set state to casting\n  //start cast data collection\n\n  recordReelIn = () => {\n    let newCurrentSession = this.state.currentSession;\n    let reelInTime = new Date();\n    newCurrentSession.currentCast.reelInTime = reelInTime.getTime();\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  recordCatchSuccess = (recordedSpecies, recordedWeight) => {\n    let cast = this.state.currentSession.currentCast;\n    let thisBites = cast.bites + 1;\n    let thisCastTime = cast.castTime;\n    let thisReelInTime = cast.reelInTime;\n    let thisDuration = cast.reelInTime - cast.castTime;\n    let thisLakeName = this.state.lakes[this.state.currentSession.lakeIndex]\n      .name;\n    let thisLakeIndex = this.state.currentSession.lakeIndex;\n    let thisBait = this.state.currentSession.bait;\n    let thisStyle = this.state.currentSession.style;\n    let thisSpecies = recordedSpecies;\n    let thisWeight = recordedWeight;\n    let thisCatchSuccess = true;\n    let thisCast = {\n      bites: thisBites,\n      castTime: thisCastTime,\n      reelInTime: thisReelInTime,\n      duration: thisDuration,\n      lakeName: thisLakeName,\n      lakeIndex: thisLakeIndex,\n      bait: thisBait,\n      style: thisStyle,\n      species: thisSpecies,\n      weight: thisWeight,\n      catchSuccess: thisCatchSuccess,\n    };\n\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.castHistory.push(thisCast);\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n  //update cast history and fish history\n  //this.endCast\n\n  recordCatchFail = () => {\n    let cast = this.state.currentSession.currentCast;\n    let thisBites = cast.bites;\n    let thisCastTime = cast.castTime;\n    let thisReelInTime = cast.reelInTime;\n    let thisDuration = cast.reelInTime - cast.castTime;\n    let thisLakeName = this.state.lakes[this.state.currentSession.lakeIndex]\n      .name;\n    let thisLakeIndex = this.state.currentSession.lakeIndex;\n    let thisBait = this.state.currentSession.bait;\n    let thisStyle = this.state.currentSession.style;\n    let thisCatchSuccess = false;\n    let thisCast = {\n      bites: thisBites,\n      castTime: thisCastTime,\n      reelInTime: thisReelInTime,\n      duration: thisDuration,\n      lakeName: thisLakeName,\n      lakeIndex: thisLakeIndex,\n      bait: thisBait,\n      style: thisStyle,\n      catchSuccess: thisCatchSuccess,\n    };\n\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.castHistory.push(thisCast);\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  }; //update cast history\n  //this.endCast\n\n  endCast = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.casting = false;\n\n    newCurrentSession.currentCast.bites = 0;\n\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  addBite = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.currentCast.bites++;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  changeBait = (bait) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.bait = bait;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  changeStyle = (style) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.style = style;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  mSToDate = (milliseconds) => {\n    let date = new Date();\n    date.setTime(milliseconds);\n    return date;\n  };\n\n  mSToReadable = (milliseconds) => {\n    let seconds = (milliseconds / 1000) % 60;\n    let secondsNoDecimal = seconds.toFixed();\n    let minutes = ((milliseconds / 1000 - seconds) / 60) % 60;\n    let hours = ((milliseconds / 1000 - seconds) / 60 - minutes) / 60;\n\n    return `${hours < 10 ? `0${hours}` : hours}:${\n      minutes < 10 ? `0${minutes}` : minutes\n    }:${secondsNoDecimal < 10 ? `0${secondsNoDecimal}` : secondsNoDecimal}`;\n  };\n\n  kilosToPoundsReadable = (weight) => {\n    let weightOunces = weight / 0.028349;\n    let remainOunces = weightOunces % 16;\n    let pounds = (weightOunces - remainOunces) / 16;\n    return `${pounds} lbs ${remainOunces.toFixed(0)} ounces`;\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}