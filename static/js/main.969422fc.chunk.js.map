{"version":3,"sources":["catch.module.css","session.module.css","lakes.module.css","home.module.css","Home.js","Lakes.js","Session.js","Catch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","useState","toSession","setToSession","to","className","styles","container","Button","button","size","variant","currentSession","onClick","Lakes","Accordion","defaultActiveKey","lakes","map","lake","index","Card","Key","Toggle","as","Header","eventKey","lakeHeader","name","sz","event","stopPropagation","startSession","Collapse","Body","lakeBody","bodyButtons","editLake","deleteLake","length","addLake","Session","toHome","setToHome","toCatch","setToCatch","header","lakeIndex","castInfo","casting","cast","casts","currentCast","bites","castingOptions","DropdownButton","ButtonGroup","title","bait","baits","Dropdown","Item","changeBait","style","changeStyle","verticalButtons","catchButton","recordReelIn","horizontalButtons","otherButton","addBite","recordCatchFail","endCast","endSession","Catch","changeSpecies","newSpecies","newCatch","state","catch","species","setState","changeWeight","weight","target","value","addCatch","recordCatchSuccess","castTime","catchTime","this","thisCatch","reelInTime","DropdownItem","Form","Group","controlId","Label","Control","type","min","max","step","onChange","catchStats","statsPair","mSToDate","toLocaleDateString","toLocaleTimeString","recordButton","React","Component","App","newLakeName","window","prompt","newLake","newLakes","push","localStorage","setItem","JSON","stringify","editedLake","confirm","splice","newCurrentSession","catches","castingDuration","catchSuccess","castHistory","newCastHistory","concat","Date","getTime","recordedSpecies","recordedWeight","thisCast","duration","lakeName","milliseconds","date","setTime","path","exact","render","getItem","savedSession","parse","savedLakes","savedCastHistory","savedBaits","savedStyles","savedSpecies","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.969422fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"catch_container__2PM1J\",\"species\":\"catch_species__1YkKM\",\"weight\":\"catch_weight__3W8MJ\",\"catchStats\":\"catch_catchStats__3b_MT\",\"statsPair\":\"catch_statsPair__P5rQi\",\"recordButton\":\"catch_recordButton__2lfeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"session_container__lCfA5\",\"header\":\"session_header__2r-16\",\"castInfo\":\"session_castInfo__1u3MJ\",\"castingOptions\":\"session_castingOptions__91fQk\",\"verticalButtons\":\"session_verticalButtons__Lw9As\",\"horizontalButtons\":\"session_horizontalButtons__yWM0a\",\"catchButton\":\"session_catchButton__kwDQb\",\"otherButton\":\"session_otherButton__39D0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lakes_container__2X8aK\",\"lakeHeader\":\"lakes_lakeHeader__3Hrvc\",\"lakeBody\":\"lakes_lakeBody__1E5C8\",\"bodyButtons\":\"lakes_bodyButtons__312n9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__BAwCE\",\"button\":\"home_button__hXUXe\"};","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./home.module.css\";\r\n\r\nfunction Home(props) {\r\n  const [toSession, setToSession] = useState(false);\r\n\r\n  const toCurrentSession = () => {\r\n    if (props.currentSession) {\r\n      setToSession(true);\r\n    }\r\n  };\r\n\r\n  if (toSession) {\r\n    return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Link to=\"/fishv2/lakes\">\r\n        <Button className={styles.button} size=\"lg\">\r\n          Lakes\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/fishv2/stats\">\r\n        <Button className={styles.button} size=\"lg\">\r\n          Statistics\r\n        </Button>\r\n      </Link>\r\n\r\n      <Button\r\n        className={styles.button}\r\n        size=\"lg\"\r\n        variant={props.currentSession ? \"primary\" : \"secondary\"}\r\n        onClick={toCurrentSession}\r\n      >\r\n        Session\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport styles from \"./lakes.module.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Lakes(props) {\r\n  const [toSession, setToSession] = useState(false);\r\n\r\n  const addLake = (event) => {\r\n    props.addLake();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const editLake = (event, index) => {\r\n    props.editLake(index);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const deleteLake = (index) => {\r\n    props.deleteLake(index);\r\n  };\r\n\r\n  const startSession = (event, index) => {\r\n    if (!props.currentSession) {\r\n      props.startSession(index);\r\n      setToSession(true);\r\n    } else {\r\n      event.stopPropagation();\r\n    }\r\n    //implement end current session\r\n  };\r\n\r\n  if (toSession) {\r\n    return <Redirect to=\"/fish/session\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {props.lakes.map((lake, index) => (\r\n          <Card Key={index}>\r\n            <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n              <div className={styles.lakeHeader}>\r\n                {lake.name}\r\n                <div>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    sz=\"lg\"\r\n                    onClick={(event) => {\r\n                      startSession(event, index);\r\n                    }}\r\n                  >\r\n                    Fish\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={index}>\r\n              <Card.Body>\r\n                <div className={styles.lakeBody}>\r\n                  Stats here some time\r\n                  <div className={styles.bodyButtons}>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      sz=\"lg\"\r\n                      onClick={(event) => editLake(event, index)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={() => deleteLake(index)}>\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        ))}\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey={props.lakes.length}>\r\n            <div className={styles.lakeHeader}>\r\n              Add a lake\r\n              <div>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  sz=\"lg\"\r\n                  onClick={(event) => addLake(event)}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Accordion.Toggle>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lakes;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./session.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\n\r\nfunction Session(props) {\r\n  const [toHome, setToHome] = useState(false);\r\n  const [toCatch, setToCatch] = useState(false);\r\n\r\n  const endSession = () => {\r\n    setToHome(true);\r\n    props.endSession();\r\n  };\r\n\r\n  const cast = () => {\r\n    props.cast();\r\n  };\r\n\r\n  const endCast = () => {\r\n    props.recordReelIn();\r\n    props.recordCatchFail();\r\n    props.endCast();\r\n  };\r\n\r\n  const addBite = () => {\r\n    if (props.currentSession.casting) {\r\n      props.addBite();\r\n    }\r\n  };\r\n\r\n  const changeBait = (bait) => {\r\n    props.changeBait(bait);\r\n  };\r\n\r\n  const changeStyle = (style) => {\r\n    props.changeStyle(style);\r\n  };\r\n\r\n  const recordCatchDetails = () => {\r\n    if (props.currentSession.casting) {\r\n      props.recordReelIn();\r\n      setToCatch(true);\r\n    }\r\n  };\r\n\r\n  if (toHome) {\r\n    return <Redirect to=\"/\"></Redirect>;\r\n  }\r\n  if (toCatch) {\r\n    return <Redirect to=\"/fish/catch\"></Redirect>;\r\n  }\r\n\r\n  return props.currentSession ? (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        {props.lakes[props.currentSession.lakeIndex].name}{\" \"}\r\n        <Link to=\"/\">\r\n          <Button>home</Button>\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className={styles.castInfo}\r\n        onClick={props.currentSession.casting === false ? cast : null}\r\n      >\r\n        {props.currentSession.casting === true ? (\r\n          <div>\r\n            {props.currentSession.casts}{\" \"}\r\n            {props.currentSession.currentCast.bites}\r\n          </div>\r\n        ) : (\r\n          \"CAST\"\r\n        )}\r\n      </div>{\" \"}\r\n      <div className={styles.castingOptions}>\r\n        <DropdownButton\r\n          as={ButtonGroup}\r\n          variant=\"info\"\r\n          title={\r\n            props.currentSession.bait ? props.currentSession.bait : \"NO BAIT\"\r\n          }\r\n        >\r\n          {props.baits.map((bait, index) => (\r\n            <Dropdown.Item\r\n              eventKey={index}\r\n              onClick={() => {\r\n                changeBait(bait);\r\n              }}\r\n            >\r\n              {bait}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n\r\n        <DropdownButton\r\n          as={ButtonGroup}\r\n          variant=\"info\"\r\n          title={\r\n            props.currentSession.style ? props.currentSession.style : \"NO STYLE\"\r\n          }\r\n        >\r\n          {props.styles.map((style, index) => (\r\n            <Dropdown.Item\r\n              eventKey={index}\r\n              onClick={() => {\r\n                changeStyle(style);\r\n              }}\r\n            >\r\n              {style}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </div>\r\n      <div className={styles.verticalButtons}>\r\n        <Button\r\n          className={styles.catchButton}\r\n          variant=\"success\"\r\n          size=\"lg\"\r\n          onClick={recordCatchDetails}\r\n        >\r\n          FISH LANDED\r\n        </Button>{\" \"}\r\n        <div className={styles.horizontalButtons}>\r\n          <Button\r\n            className={styles.otherButton}\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            onClick={addBite}\r\n          >\r\n            BITE OR RUN\r\n          </Button>{\" \"}\r\n          <Button\r\n            className={styles.otherButton}\r\n            variant={props.currentSession.casting ? \"info\" : \"danger\"}\r\n            size=\"lg\"\r\n            onClick={props.currentSession.casting ? endCast : endSession}\r\n          >\r\n            {props.currentSession.casting ? \"END CAST\" : \"END SESSION\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\"></Redirect>\r\n  );\r\n}\r\n\r\nexport default Session;\r\n","import React from \"react\";\r\nimport styles from \"./catch.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Catch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      catch: {\r\n        lakeIndex: null,\r\n        castTime: null,\r\n        catchTime: null,\r\n        species: null,\r\n        weight: null,\r\n        bait: null,\r\n        style: null,\r\n      },\r\n      toSession: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.currentSession) {\r\n      let thisCatch = this.state.catch;\r\n      thisCatch.lakeIndex = this.props.currentSession.lakeIndex;\r\n      thisCatch.castTime = this.props.currentSession.currentCast.castTime;\r\n      thisCatch.catchTime = this.props.currentSession.currentCast.reelInTime;\r\n      thisCatch.bait = this.props.currentSession.bait;\r\n      thisCatch.style = this.props.currentSession.style;\r\n      this.setState({ catch: thisCatch });\r\n    }\r\n  }\r\n\r\n  changeSpecies = (newSpecies) => {\r\n    let newCatch = this.state.catch;\r\n    newCatch.species = newSpecies;\r\n    this.setState({ catch: newCatch });\r\n  };\r\n\r\n  changeWeight = (event) => {\r\n    let newCatch = this.state.catch;\r\n    newCatch.weight = event.target.value;\r\n    this.setState({ catch: newCatch });\r\n  };\r\n\r\n  addCatch = () => {\r\n    this.props.recordCatchSuccess(\r\n      this.state.catch.species,\r\n      this.state.catch.weight\r\n    );\r\n    this.props.endCast();\r\n    this.setState({ toSession: true });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.currentSession) {\r\n      return <Redirect to=\"/fishv2/\"></Redirect>;\r\n    }\r\n\r\n    if (this.state.toSession) {\r\n      return <Redirect to=\"/fishv2/session\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <DropdownButton\r\n          size=\"lg\"\r\n          className={styles.species}\r\n          as={ButtonGroup}\r\n          variant=\"primary\"\r\n          title={\r\n            this.state.catch.species ? this.state.catch.species : \"NO SPECIES\"\r\n          }\r\n        >\r\n          {this.props.species.map((species, index) => (\r\n            <DropdownItem\r\n              eventKey={index}\r\n              onClick={() => {\r\n                this.changeSpecies(species);\r\n              }}\r\n            >\r\n              {species}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownButton>\r\n\r\n        <Form className={styles.weight}>\r\n          <Form.Group controlId=\"weightRange\">\r\n            <Form.Label>\r\n              {this.state.catch.weight\r\n                ? this.state.catch.weight\r\n                : \"NO WEIGHT RECORDED\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"40\"\r\n              step=\"0.028\"\r\n              onChange={this.changeWeight}\r\n              value={this.state.catch.weight}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <div className={styles.catchStats}>\r\n          <div className={styles.statsPair}>\r\n            <div>\r\n              {this.state.catch.lakeIndex !== null\r\n                ? this.props.lakes[this.state.catch.lakeIndex].name\r\n                : \"NA\"}\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              {this.props\r\n                .mSToDate(this.state.catch.catchTime)\r\n                .toLocaleDateString()}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Cast time:{\" \"}\r\n            <div>\r\n              {this.props\r\n                .mSToDate(this.state.catch.castTime)\r\n                .toLocaleTimeString()}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Catch Time:{\" \"}\r\n            <div>\r\n              {this.props\r\n                .mSToDate(this.state.catch.catchTime)\r\n                .toLocaleTimeString()}{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Species:{\" \"}\r\n            <div>\r\n              {this.state.catch.species ? this.state.catch.species : \"NA\"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Weight:{\" \"}\r\n            <div>\r\n              {this.state.catch.weight ? this.state.catch.weight : \"NA\"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Bait:{\" \"}\r\n            <div>{this.state.catch.bait ? this.state.catch.bait : \"NA\"}</div>\r\n          </div>\r\n          <div className={styles.statsPair}>\r\n            Style:{\" \"}\r\n            <div>{this.state.catch.style ? this.state.catch.style : \"NA\"}</div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant=\"success\"\r\n          size=\"lg\"\r\n          className={styles.recordButton}\r\n          onClick={this.addCatch}\r\n        >\r\n          ADD CATCH\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Catch;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./Home\";\nimport Lakes from \"./Lakes\";\nimport Session from \"./Session\";\nimport Catch from \"./Catch\";\n\n//date to be stored as utc string and parsed on use due to localstrorage corrupting date objects stored directly\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lakes: [{ name: \"Holton\", name: \"Alderby\" }],\n      castHistory: [],\n\n      species: [\"Roach\", \"Pike\", \"Carp\", \"Perch\"],\n      baits: [\"Maggot\", \"Corn\"],\n      styles: [\"Ledger\", \"Float\"],\n      currentSession: null,\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/fishv2/\"\n            exact\n            render={(props) => (\n              <Home currentSession={this.state.currentSession}></Home>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/lakes\"\n            exact\n            render={(props) => (\n              <Lakes\n                lakes={this.state.lakes}\n                addLake={this.addLake}\n                editLake={this.editLake}\n                deleteLake={this.deleteLake}\n                startSession={this.startSession}\n                currentSession={this.state.currentSession}\n              ></Lakes>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/session\"\n            render={(props) => (\n              <Session\n                lakes={this.state.lakes}\n                currentSession={this.state.currentSession}\n                baits={this.state.baits}\n                styles={this.state.styles}\n                endSession={this.endSession}\n                cast={this.cast}\n                endCast={this.endCast}\n                recordCatchFail={this.recordCatchFail}\n                addBite={this.addBite}\n                recordReelIn={this.recordReelIn}\n                changeBait={this.changeBait}\n                changeStyle={this.changeStyle}\n              ></Session>\n            )}\n          ></Route>\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/fishv2/catch\"\n            render={(props) => (\n              <Catch\n                lakes={this.state.lakes}\n                currentSession={this.state.currentSession}\n                species={this.state.species}\n                changeSpecies={this.changeSpecies}\n                recordCatchSuccess={this.recordCatchSuccess}\n                endCast={this.endCast}\n                mSToDate={this.mSToDate}\n              ></Catch>\n            )}\n          ></Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"currentSession\")) {\n      let savedSession = localStorage.getItem(\"currentSession\");\n      savedSession = JSON.parse(savedSession);\n      this.setState({ currentSession: savedSession });\n    }\n\n    if (localStorage.getItem(\"lakes\")) {\n      let savedLakes = localStorage.getItem(\"lakes\");\n      savedLakes = JSON.parse(savedLakes);\n      this.setState({ lakes: savedLakes });\n    }\n\n    if (localStorage.getItem(\"castHistory\")) {\n      let savedCastHistory = localStorage.getItem(\"castHistory\");\n      savedCastHistory = JSON.parse(savedCastHistory);\n      this.setState({ castHistory: savedCastHistory });\n    }\n\n    if (localStorage.getItem(\"baits\")) {\n      let savedBaits = localStorage.getItem(\"baits\");\n      savedBaits = JSON.parse(savedBaits);\n      this.setState({ baits: savedBaits });\n    }\n\n    if (localStorage.getItem(\"styles\")) {\n      let savedStyles = localStorage.getItem(\"styles\");\n      savedStyles = JSON.parse(savedStyles);\n      this.setState({ styles: savedStyles });\n    }\n\n    if (localStorage.getItem(\"species\")) {\n      let savedSpecies = localStorage.getItem(\"species\");\n      savedSpecies = JSON.parse(savedSpecies);\n      this.setState({ species: savedSpecies });\n    }\n  }\n\n  //lake management\n  addLake = () => {\n    let newLakeName = window.prompt(\"Lake:\", \"\");\n    //take user input\n    if (newLakeName) {\n      let newLake = { name: newLakeName };\n      //initialize lake\n      let newLakes = [...this.state.lakes];\n      newLakes.push(newLake);\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n      //add lake to state\n    }\n  };\n\n  editLake = (index) => {\n    let newLakeName = window.prompt(\"Lake:\", \"\");\n    //take userinput\n    if (newLakeName) {\n      let editedLake = { name: newLakeName };\n      //update lake\n      let newLakes = [...this.state.lakes];\n      newLakes[index] = editedLake;\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n      //update lake state\n    }\n  };\n\n  deleteLake = (index) => {\n    //prompt user\n    //delete lake\n    if (window.confirm(\"Delete this lake?\")) {\n      let newLakes = this.state.lakes;\n      newLakes.splice(index, 1);\n      this.setState(\n        { lakes: newLakes },\n        localStorage.setItem(\"lakes\", JSON.stringify(newLakes))\n      );\n    }\n  };\n\n  startSession = (index) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession = {\n      lakeIndex: index,\n      casting: false,\n      casts: 0,\n      catches: 0,\n      castingDuration: 0,\n      bait: null,\n      style: null,\n      currentCast: {\n        catchSuccess: null,\n        castTime: null,\n        reelInTime: null,\n        bites: 0,\n      },\n      castHistory: [],\n    };\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  endSession = () => {\n    let newCastHistory = [...this.state.castHistory];\n    newCastHistory = newCastHistory.concat(\n      this.state.currentSession.castHistory\n    );\n    let newCurrentSession = this.state,\n      currentSession;\n    newCurrentSession = null;\n\n    this.setState(\n      {\n        castHistory: newCastHistory,\n\n        currentSession: newCurrentSession,\n      },\n      localStorage.setItem(\"castHistory\", JSON.stringify(newCastHistory)),\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  //casting screen\n  cast = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.casting = true;\n    newCurrentSession.casts++;\n    let castTime = new Date();\n    newCurrentSession.currentCast.castTime = castTime.getTime();\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n  //set state to casting\n  //start cast data collection\n\n  recordReelIn = () => {\n    let newCurrentSession = this.state.currentSession;\n    let reelInTime = new Date();\n    newCurrentSession.currentCast.reelInTime = reelInTime.getTime();\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  recordCatchSuccess = (recordedSpecies, recordedWeight) => {\n    let cast = this.state.currentSession.currentCast;\n    let thisCastTime = cast.castTime;\n    let thisReelInTime = cast.reelInTime;\n    let thisDuration = cast.reelInTime - cast.castTime;\n    let thisLakeName = this.state.lakes[this.state.currentSession.lakeIndex]\n      .name;\n    let thisBait = this.state.currentSession.bait;\n    let thisStyle = this.state.currentSession.style;\n    let thisSpecies = recordedSpecies;\n    let thisWeight = recordedWeight;\n    let thisCatchSuccess = true;\n    let thisCast = {\n      castTime: thisCastTime,\n      reelInTime: thisReelInTime,\n      duration: thisDuration,\n      lakeName: thisLakeName,\n      bait: thisBait,\n      style: thisStyle,\n      species: thisSpecies,\n      weight: thisWeight,\n      catchSuccess: thisCatchSuccess,\n    };\n\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.castHistory.push(thisCast);\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n  //update cast history and fish history\n  //this.endCast\n\n  recordCatchFail = () => {\n    let cast = this.state.currentSession.currentCast;\n    let thisCastTime = cast.castTime;\n    let thisReelInTime = cast.reelInTime;\n    let thisDuration = cast.reelInTime - cast.castTime;\n    let thisLakeName = this.state.lakes[this.state.currentSession.lakeIndex]\n      .name;\n    let thisBait = this.state.currentSession.bait;\n    let thisStyle = this.state.currentSession.style;\n    let thisCatchSuccess = false;\n    let thisCast = {\n      castTime: thisCastTime,\n      reelInTime: thisReelInTime,\n      duration: thisDuration,\n      lakeName: thisLakeName,\n      bait: thisBait,\n      style: thisStyle,\n      catchSuccess: thisCatchSuccess,\n    };\n\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.castHistory.push(thisCast);\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  }; //update cast history\n  //this.endCast\n\n  endCast = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.casting = false;\n\n    newCurrentSession.currentCast.bites = 0;\n\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  addBite = () => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.currentCast.bites++;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  changeBait = (bait) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.bait = bait;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  changeStyle = (style) => {\n    let newCurrentSession = this.state.currentSession;\n    newCurrentSession.style = style;\n    this.setState(\n      { currentSession: newCurrentSession },\n      localStorage.setItem(\"currentSession\", JSON.stringify(newCurrentSession))\n    );\n  };\n\n  mSToDate = (milliseconds) => {\n    let date = new Date();\n    date.setTime(milliseconds);\n    return date;\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}